{"ast":null,"code":"var _jsxFileName = \"/Users/seonmin/Documents/my-app/src/components/Auth/LocalSignin/LocalSigin.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst LocalSignin = () => {\n  _s();\n\n  //state for siginin\n  const [idText, setIdText] = useState(\"\");\n  const [pwText, setPwText] = useState(\"\"); //handlers\n\n  const idTextChangeHandler = event => {\n    setIdText(event.target.value);\n    console.log(idText);\n  };\n\n  const pwTextChangeHandler = event => {\n    setPwText(event.target.value);\n    console.log(pwText);\n  };\n\n  const localSiginHandler = () => {\n    console.log(idText, pwdText);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"ID\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: idText,\n        onChange: idTextChangeHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"PASSWORD\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        value: pwText,\n        onChange: pwTextChangeHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onSubmit: localSiginHandler,\n      children: \"SIGNIN\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n};\n\n_s(LocalSignin, \"ikusnhQehgjLuSIuVYYapoElWl8=\");\n\n_c = LocalSignin;\nexport default LocalSignin;\n\nvar _c;\n\n$RefreshReg$(_c, \"LocalSignin\");","map":{"version":3,"sources":["/Users/seonmin/Documents/my-app/src/components/Auth/LocalSignin/LocalSigin.js"],"names":["useState","LocalSignin","idText","setIdText","pwText","setPwText","idTextChangeHandler","event","target","value","console","log","pwTextChangeHandler","localSiginHandler","pwdText"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;;;AAEA,MAAMC,WAAW,GAAG,MAAM;AAAA;;AACxB;AACA,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBH,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAACI,MAAD,EAASC,SAAT,IAAsBL,QAAQ,CAAC,EAAD,CAApC,CAHwB,CAIxB;;AACA,QAAMM,mBAAmB,GAAIC,KAAD,IAAW;AACrCJ,IAAAA,SAAS,CAACI,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAT;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYT,MAAZ;AACD,GAHD;;AAIA,QAAMU,mBAAmB,GAAIL,KAAD,IAAW;AACrCF,IAAAA,SAAS,CAACE,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAT;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYP,MAAZ;AACD,GAHD;;AAIA,QAAMS,iBAAiB,GAAG,MAAM;AAC9BH,IAAAA,OAAO,CAACC,GAAR,CAAYT,MAAZ,EAAoBY,OAApB;AACD,GAFD;;AAIA,sBACE;AAAA,4BACE;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,KAAK,EAAEZ,MAA1B;AAAkC,QAAA,QAAQ,EAAEI;AAA5C;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAKE;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAO,QAAA,IAAI,EAAC,UAAZ;AAAuB,QAAA,KAAK,EAAEF,MAA9B;AAAsC,QAAA,QAAQ,EAAEQ;AAAhD;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YALF,eASE;AAAQ,MAAA,QAAQ,EAAEC,iBAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YATF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAaD,CA9BD;;GAAMZ,W;;KAAAA,W;AAgCN,eAAeA,WAAf","sourcesContent":["import { useState } from \"react\";\n\nconst LocalSignin = () => {\n  //state for siginin\n  const [idText, setIdText] = useState(\"\");\n  const [pwText, setPwText] = useState(\"\");\n  //handlers\n  const idTextChangeHandler = (event) => {\n    setIdText(event.target.value);\n    console.log(idText);\n  };\n  const pwTextChangeHandler = (event) => {\n    setPwText(event.target.value);\n    console.log(pwText);\n  };\n  const localSiginHandler = () => {\n    console.log(idText, pwdText);\n  };\n\n  return (\n    <form>\n      <div>\n        <label>ID</label>\n        <input type=\"text\" value={idText} onChange={idTextChangeHandler} />\n      </div>\n      <div>\n        <label>PASSWORD</label>\n        <input type=\"password\" value={pwText} onChange={pwTextChangeHandler} />\n      </div>\n      <button onSubmit={localSiginHandler}>SIGNIN</button>\n    </form>\n  );\n};\n\nexport default LocalSignin;\n"]},"metadata":{},"sourceType":"module"}
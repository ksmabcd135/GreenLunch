{"ast":null,"code":"var _jsxFileName = \"/Users/seonmin/Documents/my-app/client/src/components/Auth/LocalSignin/LocalSigin.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst LocalSignin = () => {\n  _s();\n\n  //state for siginin\n  const [idText, setIdText] = useState(\"\");\n  const [pwText, setPwText] = useState(\"\"); //handlers\n\n  const idTextChangeHandler = event => {\n    setIdText(event.target.value);\n  };\n\n  const pwTextChangeHandler = event => {\n    setPwText(event.target.value);\n  };\n\n  const localSiginHandler = event => {\n    event.preventDefault();\n    console.log(idText, pwText);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: localSiginHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"SIGNIN\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"ID\",\n        value: idText,\n        onChange: idTextChangeHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        placeholder: \"PW\",\n        value: pwText,\n        onChange: pwTextChangeHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"SIGNIN\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n};\n\n_s(LocalSignin, \"ikusnhQehgjLuSIuVYYapoElWl8=\");\n\n_c = LocalSignin;\nexport default LocalSignin;\n\nvar _c;\n\n$RefreshReg$(_c, \"LocalSignin\");","map":{"version":3,"sources":["/Users/seonmin/Documents/my-app/client/src/components/Auth/LocalSignin/LocalSigin.js"],"names":["useState","LocalSignin","idText","setIdText","pwText","setPwText","idTextChangeHandler","event","target","value","pwTextChangeHandler","localSiginHandler","preventDefault","console","log"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;;;AAEA,MAAMC,WAAW,GAAG,MAAM;AAAA;;AACxB;AACA,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBH,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAACI,MAAD,EAASC,SAAT,IAAsBL,QAAQ,CAAC,EAAD,CAApC,CAHwB,CAIxB;;AACA,QAAMM,mBAAmB,GAAIC,KAAD,IAAW;AACrCJ,IAAAA,SAAS,CAACI,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAT;AACD,GAFD;;AAGA,QAAMC,mBAAmB,GAAIH,KAAD,IAAW;AACrCF,IAAAA,SAAS,CAACE,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAT;AACD,GAFD;;AAGA,QAAME,iBAAiB,GAAIJ,KAAD,IAAW;AACnCA,IAAAA,KAAK,CAACK,cAAN;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYZ,MAAZ,EAAoBE,MAApB;AACD,GAHD;;AAKA,sBACE;AAAM,IAAA,QAAQ,EAAEO,iBAAhB;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA,6BACE;AACE,QAAA,IAAI,EAAC,MADP;AAEE,QAAA,WAAW,EAAC,IAFd;AAGE,QAAA,KAAK,EAAET,MAHT;AAIE,QAAA,QAAQ,EAAEI;AAJZ;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAFF,eAUE;AAAA,6BACE;AACE,QAAA,IAAI,EAAC,UADP;AAEE,QAAA,WAAW,EAAC,IAFd;AAGE,QAAA,KAAK,EAAEF,MAHT;AAIE,QAAA,QAAQ,EAAEM;AAJZ;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAVF,eAkBE;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAlBF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAsBD,CAtCD;;GAAMT,W;;KAAAA,W;AAwCN,eAAeA,WAAf","sourcesContent":["import { useState } from \"react\";\n\nconst LocalSignin = () => {\n  //state for siginin\n  const [idText, setIdText] = useState(\"\");\n  const [pwText, setPwText] = useState(\"\");\n  //handlers\n  const idTextChangeHandler = (event) => {\n    setIdText(event.target.value);\n  };\n  const pwTextChangeHandler = (event) => {\n    setPwText(event.target.value);\n  };\n  const localSiginHandler = (event) => {\n    event.preventDefault();\n    console.log(idText, pwText);\n  };\n\n  return (\n    <form onSubmit={localSiginHandler}>\n      <h2>SIGNIN</h2>\n      <div>\n        <input\n          type=\"text\"\n          placeholder=\"ID\"\n          value={idText}\n          onChange={idTextChangeHandler}\n        />\n      </div>\n      <div>\n        <input\n          type=\"password\"\n          placeholder=\"PW\"\n          value={pwText}\n          onChange={pwTextChangeHandler}\n        />\n      </div>\n      <button type=\"submit\">SIGNIN</button>\n    </form>\n  );\n};\n\nexport default LocalSignin;\n"]},"metadata":{},"sourceType":"module"}
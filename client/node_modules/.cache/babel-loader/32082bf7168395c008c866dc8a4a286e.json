{"ast":null,"code":"var _jsxFileName = \"/Users/seonmin/Documents/my-app/src/components/Auth/Auth.js\";\nimport React from \"react\";\nimport classes from \"./Auth.css\";\nimport { signIn, signOut } from \"../../actions\";\nimport { connect } from \"react-redux\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Auth extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      isSignedIn: null\n    };\n\n    this.onAuthChange = isSignedIn => {\n      if (isSignedIn) {\n        this.props.signIn(this.auth.currentUser.get().getId());\n      } else {\n        this.props.signOut();\n      }\n    };\n\n    this.onSignInClick = () => {\n      this.auth.signIn();\n    };\n\n    this.onSignOutClick = () => {\n      this.auth.signOut();\n    };\n\n    this.renderAuthButton = () => {\n      if (this.props.isSignedIn === null) {\n        return null;\n      } else if (this.props.isSignedIn) {\n        return /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: this.onSignOutClick,\n          children: \"Google SignOut\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 14\n        }, this);\n      } else {\n        return /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: this.onSignInClick,\n          children: \"Google SignIn\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 14\n        }, this);\n      }\n    };\n  }\n\n  componentDidMount() {\n    window.gapi.load(\"client:auth2\", () => {\n      window.gapi.client.init({\n        client_id: process.env.REACT_APP_GOOGLE_OAUTH2_CLIENT_ID,\n        scope: \"email\"\n      }).then(() => {\n        this.auth = window.gapi.auth2.getAuthInstance();\n        this.onAuthChange(this.auth.isSignedIn.get());\n        this.auth.isSignedIn.listen(this.onAuthChange);\n      });\n    });\n  } //event listener\n\n\n  //rendering helper function\n  retrieveUserStatus() {\n    if (this.state.isSignedIn === null) {\n      return \"UNKNOWN\";\n    } else if (this.state.isSignedIn) {\n      return \"SIGNEDIN\";\n    } else {\n      return \"NOT SIGNED IN\";\n    }\n  } //rendering function based on status\n\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"ID\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"PW\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: this.renderAuthButton()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    isSignedIn: state.auth.isSignedIn\n  };\n};\n\nexport default connect(mapStateToProps, {\n  signIn,\n  signOut\n})(Auth);","map":{"version":3,"sources":["/Users/seonmin/Documents/my-app/src/components/Auth/Auth.js"],"names":["React","classes","signIn","signOut","connect","Auth","Component","state","isSignedIn","onAuthChange","props","auth","currentUser","get","getId","onSignInClick","onSignOutClick","renderAuthButton","componentDidMount","window","gapi","load","client","init","client_id","process","env","REACT_APP_GOOGLE_OAUTH2_CLIENT_ID","scope","then","auth2","getAuthInstance","listen","retrieveUserStatus","render","mapStateToProps"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport classes from \"./Auth.css\";\nimport { signIn, signOut } from \"../../actions\";\nimport { connect } from \"react-redux\";\n\nclass Auth extends React.Component {\n  state = { isSignedIn: null };\n\n  componentDidMount() {\n    window.gapi.load(\"client:auth2\", () => {\n      window.gapi.client\n        .init({\n          client_id: process.env.REACT_APP_GOOGLE_OAUTH2_CLIENT_ID,\n          scope: \"email\",\n        })\n        .then(() => {\n          this.auth = window.gapi.auth2.getAuthInstance();\n          this.onAuthChange(this.auth.isSignedIn.get());\n          this.auth.isSignedIn.listen(this.onAuthChange);\n        });\n    });\n  }\n  //event listener\n  onAuthChange = (isSignedIn) => {\n    if (isSignedIn) {\n      this.props.signIn(this.auth.currentUser.get().getId());\n    } else {\n      this.props.signOut();\n    }\n  };\n\n  onSignInClick = () => {\n    this.auth.signIn();\n  };\n\n  onSignOutClick = () => {\n    this.auth.signOut();\n  };\n\n  //rendering helper function\n  retrieveUserStatus() {\n    if (this.state.isSignedIn === null) {\n      return \"UNKNOWN\";\n    } else if (this.state.isSignedIn) {\n      return \"SIGNEDIN\";\n    } else {\n      return \"NOT SIGNED IN\";\n    }\n  }\n\n  //rendering function based on status\n  renderAuthButton = () => {\n    if (this.props.isSignedIn === null) {\n      return null;\n    } else if (this.props.isSignedIn) {\n      return <button onClick={this.onSignOutClick}>Google SignOut</button>;\n    } else {\n      return <button onClick={this.onSignInClick}>Google SignIn</button>;\n    }\n  };\n\n  render() {\n    return (\n      <form>\n        <label>ID</label>\n        <input type=\"text\" />\n        <label>PW</label>\n        <input type=\"password\" />\n        <div>{this.renderAuthButton()}</div>\n      </form>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return { isSignedIn: state.auth.isSignedIn };\n};\nexport default connect(mapStateToProps, { signIn, signOut })(Auth);\n"]},"metadata":{},"sourceType":"module"}